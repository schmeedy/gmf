# ==============================================================================
#*+------------------------------------------------------------------------+
#*| Licensed Materials - Property of IBM                                   |
#*| (C) Copyright IBM Corp. 2005.  All Rights Reserved.                    |
#*|                                                                        |
#*| US Government Users Restricted Rights - Use, duplication or disclosure |
#*| restricted by GSA ADP Schedule Contract with IBM Corp.                 |
#*+------------------------------------------------------------------------+
# ==============================================================================


# ==============================================================================
# Translation Instruction: section to be translated
#                       
# Edit element labels - These labels appear in the undo and redo action labels 
# ==============================================================================
Request.Label.Create=Create {0}
Request.Label.Destroy=Delete Element
Request.Label.Duplicate=Duplicate
Request.Label.Move=Move
Request.Label.ReorientSource=Change Relationship Source
Request.Label.ReorientTarget=Change Relationship Target



# ==============================================================================
# Translation Instruction: section to be translated
#                       
# Extension point loading errors messages.
# ==============================================================================

# Indicates that a plugin's element types had loading errors.
# args:
#    0 - the contributing plugin ID
#    1 - the reason why a plugin's element types could not be loaded (should
#        be one of the error or warning messages in the type.*,
#        adviceBinding.*, element.* or elementTypeFactory.* strings below)
#
xml.parsing_ERROR_= Errors occurred in parsing XML element type definitions contributed \
     by plugin "{0}": {1}
     
     
     
# ==============================================================================
# Translation Instruction: section to be translated
#
# Element type access error messages.
# ==============================================================================
     
     
# Indicates that an element type could not be initialized and is, therefore,
#     not in the system.
# args:
#     0 - the ID of the element type
#     1 - the reason for failure to initialize the element type (should be one
#         of the type.reason.* strings, below)
#
type.not-init_WARN_= Error initializing element type "{0}": {1}.  It will be ignored.


# Explanation of failure to initialize element type because no ID was specified.
type.reason.no-id_WARN_= no ID specified


# Explanation of failure to initialize element type because an element type with the
#   same ID has already been registered
type.reason.duplicate-id_WARN_= element type with same ID already exists


# Explanation of failure to initialize metamodel type because no EClass was specified
type.reason.no-eclass_WARN_= no eclass specified


# Explanation of failure to initialize metamodel type because the specified EClass 
#   doesn't exist
type.reason.eclass-not-found_WARN_= specified eclass does not exist


# Explanation of failure to initialize specialization type because no specialized 
#   types were specified
type.reason.no-specialized_WARN_= no specialized types


# Explanation of failure to initialize specialization type because no ID was 
#   specified for a specialized type.
type.reason.no-specialized-id_WARN_= no ID for specialized type


# Explanation of failure to initialize an element type because no name was 
#   specified for a parameter.
type.reason.no-param-name_WARN_= no parameter name specified


# Explanation of failure to initialize an element type because no value was 
#   specified for a parameter.
type.reason.no-param-value_WARN_= no parameter value specified



# ==============================================================================
# Translation Instruction: section to be translated
#
# Edit helper advice binding access error messages.
# ==============================================================================
     
     
# Indicates that an advice binding could not be initialized and is, therefore,
#     not in the system.
# args:
#     0 - the ID of the advice binding
#     1 - the reason for failure to initialize the advice binding (should be one
#         of the adviceBinding.reason.* strings, below)
#
adviceBinding.not-init_WARN_= Error initializing advice binding "{0}": {1}.  It will be ignored.


# Explanation of failure to initialize advice binding because no ID was specified.
adviceBinding.reason.no-id_WARN_= no ID specified


# Explanation of failure to initialize advice binding because no element type ID was specified.
adviceBinding.reason.no-type-id_WARN_= no type ID specified

# Explanation of failure to initialize advice binding because no edit helper advice class was specified.
adviceBinding.reason.no-edit-helper-advice-id_WARN_= no edit helper advice class specified

# Explanation of failure to initialize advice binding because no an invalid inheritance value was specified.
adviceBinding.reason.invalid-inheritance_WARN_= invalid inheritance value

# ==============================================================================
# Translation Instruction: section to be translated
#
# Element type and edit helper advice binding access error messages.
# ==============================================================================
     
     
# Indicates that an element type or advice binding could not be initialized and is, therefore,
#     not in the system.
# args:
#     0 - the ID of the element type or advice binding
#     1 - the reason for failure to initialize the element type or advice binding (should be one
#         of the element.reason.* strings, below)
#
elment.not-init_WARN_= Error initializing element type or advice binding "{0}": {1}.  It will be ignored.


# Explanation of failure to initialize an element type or advice binding because the 
#   enablement could not be converted to an expression.
element.reason.invalid-enablement-expression_WARN_= unable to convert enablement to expression


# Explanation of failure to initialize an element type or advice binding because no feature name was 
#   specified for a containment feature.
element.reason.no-econtainmentfeature-qname_WARN_= no containment feature qname specified

# Explanation of failure to initialize an element type or advice binding because no matcher 
#   class was  specified.
element.reason.matcher-no-class_WARN_= no matcher class specified

# Explanation of failure to initialize an element type or advice binding because no metamodel was
#   specified for a containment feature name
# args:
#     0 - the containment feature name
element.reason.no-econtainmentfeature-metamodel_WARN_= no metamodel specified for the containment feature "{0}"

# ==============================================================================
# Translation Instruction: section to be translated
#
# Element type factory access error messages.
# ==============================================================================
     
     
# Indicates that an element type or advice binding could not be initialized and is, therefore,
#     not in the system.
# args:
#     0 - the factory class name
#     1 - the reason for failure to initialize the element type factory (should be one
#         of the elementTypeFactory.reason.* strings, below)
elementTypeFactory.not-init_WARN_= Error initializing element type factory "{0}": {1}.  It will be ignored.


# Explanation of failure to initialize an element type factory because no factory class name was 
#   specified.
elementTypeFactory.reason.no-factory_WARN_= no element type factory class


# Explanation of failure to initialize an element type factory because no element type kind
#   was specified.
elementTypeFactory.reason.no-kind_WARN_= no element type factory kind



# ==============================================================================
# Translation Instruction: section to be translated
#
# Metamodel access error messages.
# ==============================================================================
    
     
# Indicates that a metamodel type could not be initialized and is, therefore,
#     not in the system.
# args:
#     0 - the metamodel namespace URI
#     1 - the reason for failure to initialize the metamodel (should be one
#         of the metamodel.reason.* strings, below)
metamodel.not-init_WARN_= Error initializing metamodel "{0}": {1}.  It will be ignored.


# Explanation of failure to initialize a metamodel because no namespace URI
#   was specified.
metamodel.reason.no-nsURI_WARN_ = no namespace URI specified


# Explanation of failure to initialize a metamodel because the specified namespace URI
#   could not be found.
metamodel.reason.nsURI-not-found_WARN_ = namespace URI not found



# ==============================================================================
# Translation Instruction: section to be translated
#
# Class initialization error messages.
# ==============================================================================
    
     
# Indicates that an advice binding class could not be initialized and is, therefore,
#     removed from the system.
# args:
#     0 - the advice binding class name
adviceBinding.class-not-found_ERROR_= Error initializing advice binding class "{0}".  It will be removed from the system.


# Indicates that an edit helper advice class could not be initialized and is, therefore,
#     removed from the system.
# args:
#     0 - the edit helper advice class name
editHelperAdvice.class-not-found_ERROR_= Error initializing edit helper advice class "{0}".  It will be removed from the system.

# Indicates that an edit helper class could not be initialized and is, therefore,
#     removed from the system.
# args:
#     0 - the edit helper class name
editHelper.class-not-found_ERROR_= Error initializing edit helper class "{0}".  It will be removed from the system.

# Indicates that an matcher class could not be initialized and is, therefore,
#     removed from the system.
# args:
#     0 - the matcher class name
matcher.class-not-found_ERROR_= Error initializing matcher class "{0}".  It will be removed from the system.

# Indicates that a matcher expression could not be evaluated.
# args:
#     0 - the id of the element that contributed the expression
expression.evaluation-failure_ERROR_= Error evaluating matcher expression in "{0}". 

# Indicates that an element type factory class could not be initialized and is, therefore,
#     removed from the system.
# args:
#     0 - the element type factory class name
elementTypeFactory.class-not-found_ERROR_= Error initializing element type factory class "{0}".  It will be removed from the system.

# Indicates that a containment feature is not a reference feature.
# args:
#     0 - the feature name
eContainmentFeature.not-reference-feature_ERROR_= Error initializing containment feature "{0}" because it is not a reference feature.

# Indicates that a containment feature does not exist.
# args:
#     0 - the feature name
eContainmentFeature.no-such-feature_ERROR_= Error initializing containment feature "{0}" because it does not exist.

# Indicates that a specialization type specializes more than one metamodel type.
# args:
#     0 - the ID of the specialization type
specializationType.specializes-multiple-metamodel-types_ERROR_= Error initializing specialization type "{0}" because it specializes more than one metamodel type.

# Indicates that a specialization type specializes an element type that does not exist
# args:
#     0 - the ID of the specialization type
#     1 - the ID of the specializes type that does not exist
specializationType.specializes-invalid-id_ERROR_= Error initializing specialization type "{0}" because it specializes type "{1}" which does not exist.